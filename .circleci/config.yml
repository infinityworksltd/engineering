version: 2
jobs:
  # Build job
  build:
    working_directory: &working_directory
      ~/infinityworks/engineering
    parallelism: 1
    # environment:
    #   CIRCLE_ARTIFACTS: /tmp/circleci-artifacts
    #   CIRCLE_TEST_REPORTS: /tmp/circleci-test-results
    docker:
      - image: circleci/ruby:2.5.1
    steps:
      - checkout
      - setup_remote_docker
      # - run: mkdir -p $CIRCLE_ARTIFACTS $CIRCLE_TEST_REPORTS
      - run:
          # TODO: rewrite this and run Jekyll as a ruby gem (easier said than done)
          #
          # "The job and remote docker run in separate environments"
          # https://circleci.com/docs/2.0/building-docker-images/#separation-of-environments
          #
          # to add insult to the injury:
          # 'docker cp ~/infinityworks/engineering sources:/source'
          # results in '/source/engineering/' in the volume container
          name: Building Jekyll website
          command: |
            mkdir -p ~/infinityworks/engineering/build
            chmod 777 ~/infinityworks/engineering/build
            # Create the volume container
            docker create -v /source --name sources alpine:3.4 /bin/true
            # Copy everything over to the volume container
            docker cp ~/infinityworks/engineering sources:/source
            # Now we can build
            docker run --volumes-from sources --name engineering jekyll/jekyll:pages jekyll build --source /source/engineering --destination /source/engineering/build
            # Then copy back the build ...
            docker cp engineering:/source/engineering/build/ ~/infinityworks/engineering/
      - persist_to_workspace:
          root: *working_directory
          paths:
            - build
      # - run:
      #     name: Testing a blogposts!
      #     command: |
      #       bundle exec htmlproofer ~/infinityworks/engineering/build --allow-hash-href --check-favicon --check-html --disable-external --empty-alt-ignore | tee $CIRCLE_TEST_REPORTS/htmlproofer-results.txt
      #       #for file in $(find ~/infinityworks/engineering/build/ -name \*.html); do aspell -H $file; done
      # - store_test_results:
      #     path: /tmp/circleci-test-results

  # Deploy job - using WS to transfer the result of the build
  deploy:
    docker:
      - image: circleci/python:2.7
    working_directory: *working_directory
    steps:
      - attach_workspace:
          at: ./
      - run:
          name: Install awscli
          command: sudo pip install awscli
      - run:
          name: Deploy to S3 if tests pass and branch is Master
          command: aws s3 sync ./build/ s3://${S3_ENGINEERING_BUCKET}/ --delete --exclude ".circleci/*"

# And now plugging things together
workflows:
  version: 2
  build-deploy:
    jobs:
      - build
      - deploy:
          requires:
            - build
          filters:
            branches:
              only: master